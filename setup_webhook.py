#!/usr/bin/env python3
"""
–°–∫—Ä–∏–ø—Ç –¥–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ webhook –≤ Telegram Bot API
–ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ –ø–æ—Å–ª–µ –¥–µ–ø–ª–æ—è –Ω–∞ Vercel
"""

import asyncio
import os
import sys
from aiogram import Bot
from aiogram.client.default import DefaultBotProperties
from aiogram.enums import ParseMode

async def setup_webhook():
    """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ webhook –¥–ª—è –±–æ—Ç–∞"""
    
    # –ü–æ–ª—É—á–∞–µ–º —Ç–æ–∫–µ–Ω –±–æ—Ç–∞
    bot_token = os.getenv("BOT_TOKEN")
    if not bot_token:
        print("‚ùå BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –ø–µ—Ä–µ–º–µ–Ω–Ω—ã—Ö –æ–∫—Ä—É–∂–µ–Ω–∏—è")
        return
    
    # –ü–æ–ª—É—á–∞–µ–º URL Vercel (–∑–∞–º–µ–Ω–∏—Ç–µ –Ω–∞ –≤–∞—à –¥–æ–º–µ–Ω)
    vercel_url = input("–í–≤–µ–¥–∏—Ç–µ URL –≤–∞—à–µ–≥–æ Vercel –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è (–Ω–∞–ø—Ä–∏–º–µ—Ä: https://your-app.vercel.app): ")
    if not vercel_url:
        print("‚ùå URL –Ω–µ —É–∫–∞–∑–∞–Ω")
        return
    
    webhook_url = f"{vercel_url}/webhook"
    
    # –°–æ–∑–¥–∞–µ–º –±–æ—Ç–∞
    bot = Bot(token=bot_token, default=DefaultBotProperties(parse_mode=ParseMode.HTML))
    
    try:
        # –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook
        print("üîÑ –£–¥–∞–ª—è–µ–º —Å—Ç–∞—Ä—ã–π webhook...")
        await bot.delete_webhook(drop_pending_updates=True)
        
        # –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º –Ω–æ–≤—ã–π webhook
        print(f"üîÑ –£—Å—Ç–∞–Ω–∞–≤–ª–∏–≤–∞–µ–º webhook: {webhook_url}")
        await bot.set_webhook(url=webhook_url)
        
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º webhook
        webhook_info = await bot.get_webhook_info()
        print(f"‚úÖ Webhook —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω: {webhook_info.url}")
        print(f"üìä –û–∂–∏–¥–∞—é—â–∏—Ö –æ–±–Ω–æ–≤–ª–µ–Ω–∏–π: {webhook_info.pending_update_count}")
        
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –Ω–∞—Å—Ç—Ä–æ–π–∫–µ webhook: {e}")
    finally:
        await bot.session.close()

if __name__ == "__main__":
    asyncio.run(setup_webhook())
